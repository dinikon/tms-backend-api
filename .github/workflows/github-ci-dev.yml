name: Docker Build and Publish

on:
  push:
    branches:
      - develop

jobs:
  Build:
    name: Build image & push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Log in to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker Image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/tms-backend-api-dev:${{ github.sha }} -f docker/base/Dockerfile .

      - name: Tag Docker Image as latest
        run: docker tag ghcr.io/${{ github.repository_owner }}/tms-backend-api-dev:${{ github.sha }} ghcr.io/${{ github.repository_owner }}/tms-backend-api-dev:latest

      - name: Publish Docker Image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/tms-backend-api-dev:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/tms-backend-api-dev:latest

  deploy:
    name: Deploy to k3s Cluster
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Set up Kubeconfig
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure K3s Cluster Access
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yml
          echo "KUBECONFIG=$(pwd)/kubeconfig.yml" >> $GITHUB_ENV

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.14.0'

      - name: Deploy Helm chart
        run: |
          helm upgrade --install tms-api-dev .helm --values .helm/values-develop.yaml --set image.tag=${{ github.sha }}